ext {
  // Plugins

  // https://github.com/beryx/badass-jlink-plugin
  JLINK = '3.1.1'

  // https://plugins.gradle.org/plugin/com.google.protobuf
  GOOGLE_PROTOBUF_PLUGIN = '0.9.5'

  // Tests

  // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
  JUNIT = '5.12.2'

  // Compile & Implementation

  // https://github.com/comodal/json-iterator/tags
  JSON_ITERATOR = '2.13.0'

  // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on
  // https://www.bouncycastle.org/download/bouncy-castle-java/#latest
  BOUNCY_CASTLE = '1.80'

  SAVA = '1.18.1'
  SAVA_WEB2 = '1.11.0'
  SAVA_PROGRAMS = '1.19.0'
  SAVA_SRC_GEN = '1.8.2'
  SAVA_ANCHOR_PROGRAMS = '1.15.13'

  GLAM_IX_PROXY = '0.3.0'

  // https://mvnrepository.com/artifact/com.google.cloud/google-cloud-kms
  GOOGLE_CLOUD_KMS = '2.63.0'
  SAVA_KMS = '0.3.0'

  // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
  JETTY = '12.0.19'
  SAVA_RAVINA = '0.22.0'

  // https://mvnrepository.com/artifact/io.grpc
  GRPC = '1.72.0'
  // https://github.com/grpc/grpc-java?tab=readme-ov-file#generated-code
  // https://mvnrepository.com/artifact/com.google.protobuf/protoc
  PROTOC = '3.25.5'
  // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-annotations-api
  APACHE_TOMCAT = '6.0.53'
}

apply(plugin: 'version-catalog')
apply(plugin: 'maven-publish')

catalog {
  versionCatalog {
    // Plugins

    plugin('jlink', 'org.beryx.jlink').version("$JLINK")

    plugin('google-protobuf-plugin', 'com.google.protobuf').version("$GOOGLE_PROTOBUF_PLUGIN")

    // Tests

    library('junit-jupiter', "org.junit.jupiter:junit-jupiter:$JUNIT")

    // Compile & Implementation

    library('json-iterator', "systems.comodal:json-iterator:$JSON_ITERATOR")

    library('bouncycastle', "org.bouncycastle:bcprov-jdk18on:$BOUNCY_CASTLE")

    library('sava-core', "software.sava:sava-core:$SAVA")
    library('sava-rpc', "software.sava:sava-rpc:$SAVA")

    library('sava-solana-programs', "software.sava:solana-programs:$SAVA_PROGRAMS")

    library('sava-anchor-src-gen', "software.sava:anchor-src-gen:$SAVA_SRC_GEN")
    library('sava-anchor-programs', "software.sava:anchor-programs:$SAVA_ANCHOR_PROGRAMS")

    bundle('sava-solana-programs', List.of('json-iterator', 'bouncycastle', 'sava-core', 'sava-rpc', 'sava-solana-programs', 'sava-anchor-src-gen', 'sava-anchor-programs'))

    library('sava-solana-web2', "software.sava:solana-web2:$SAVA_WEB2")

    library('google-cloud-kms', "com.google.cloud:google-cloud-kms:$GOOGLE_CLOUD_KMS")
    library('sava-kms-core', "software.sava:kms_core:$SAVA_KMS")
    library('sava-http-kms', "software.sava:http_kms:$SAVA_KMS")
    library('sava-google-kms', "software.sava:google_kms:$SAVA_KMS")

    library('sava-ravina-core', "software.sava:ravina-core:$SAVA_RAVINA")
    library('sava-ravina-jetty', "software.sava:ravina-jetty:$SAVA_RAVINA")
    library('sava-ravina-solana', "software.sava:ravina-solana:$SAVA_RAVINA")

    library('glam-ix-proxy', "systems.glam:ix-proxy:$GLAM_IX_PROXY")

    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
    library('jetty-server', "org.eclipse.jetty:jetty-server:$JETTY")
    // https://mvnrepository.com/artifact/org.eclipse.jetty.http2/jetty-http2-server
    library('jetty-http2-server', "org.eclipse.jetty.http2:jetty-http2-server:$JETTY")
    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-alpn-server
    library('jetty-alpn-server', "org.eclipse.jetty:jetty-alpn-server:$JETTY")
    library('jetty-alpn-java-server', "org.eclipse.jetty:jetty-alpn-java-server:$JETTY")
    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-alpn-conscrypt-server
    library('jetty-alpn-conscrypt-server', "org.eclipse.jetty:jetty-alpn-conscrypt-server:$JETTY")
    // https://mvnrepository.com/artifact/org.eclipse.jetty.http3/jetty-http3-server
    library('jetty-http3-server', "org.eclipse.jetty.http3:jetty-http3-server:$JETTY")

    bundle('jetty', List.of('jetty-server', 'jetty-http2-server', 'jetty-alpn-server', 'jetty-alpn-java-server', 'jetty-alpn-conscrypt-server', 'jetty-http3-server'))

    version('grpc', "$GRPC")
    version('protoc', "$PROTOC")

    // https://mvnrepository.com/artifact/io.grpc/grpc-netty-shaded
    library('grpc-netty-shaded', "io.grpc:grpc-netty-shaded:$GRPC")
    // https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
    library('grpc-protobuf', "io.grpc:grpc-protobuf:$GRPC")
    // https://mvnrepository.com/artifact/io.grpc/grpc-stub
    library('grpc-stub', "io.grpc:grpc-stub:$GRPC")
    // https://mvnrepository.com/artifact/io.grpc/protoc-gen-grpc-java
    library('protoc-gen-grpc', "io.grpc:protoc-gen-grpc-java:$GRPC")
    library('apache-tomcat-annotations-api', "org.apache.tomcat:annotations-api:$APACHE_TOMCAT")

    bundle('grpc-protobuf', List.of('grpc-netty-shaded', 'grpc-protobuf', 'grpc-stub', 'protoc-gen-grpc', 'apache-tomcat-annotations-api'))
  }
}

project.group = 'software.sava'
project.version = project.findProperty('version')

publishing {
  publications {
    maven(MavenPublication) {
      from components.versionCatalog
      groupId = project.group
      artifactId = project.name
      version = project.version
    }
  }
  repositories {
    maven {
      name = "GithubPackages"
      url = "https://maven.pkg.github.com/sava-software/solana-version-catalog"
      credentials {
        username = System.getenv("GITHUB_ACTOR") ?: project.findProperty("gpr.user.write")
        password = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.token.write")
      }
    }
  }
}
